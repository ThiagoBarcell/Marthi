unit frmTotemPrincipal;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs, FMX.Objects,
  FMX.Controls.Presentation, FMX.StdCtrls, FMX.Effects, FMX.Layouts, FMX.Edit,
  FMX.ListBox, FMX.TabControl, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.Phys.FB,
  FireDAC.Phys.FBDef, FireDAC.FMXUI.Wait, FireDAC.Stan.Param, FireDAC.DatS,
  FireDAC.DApt.Intf, FireDAC.DApt, Data.Bind.EngExt, Fmx.Bind.DBEngExt,
  System.Rtti, System.Bindings.Outputs, Fmx.Bind.Editors, Data.Bind.Components,
  Data.Bind.DBScope, Data.DB, FireDAC.Comp.DataSet, FireDAC.Comp.Client,
  Frame.MarthiGIT.Totem;

type
  TTotemPrincipalfrm = class(TForm)
    Rectangle1: TRectangle;
    RoundRect2: TRoundRect;
    Label1: TLabel;
    Image1: TImage;
    ShadowEffect2: TShadowEffect;
    ShadowEffect3: TShadowEffect;
    ShadowEffect4: TShadowEffect;
    RoundRect1: TRoundRect;
    Label2: TLabel;
    Image2: TImage;
    ShadowEffect5: TShadowEffect;
    ShadowEffect6: TShadowEffect;
    VertScrollBox1: TVertScrollBox;
    lytTop: TLayout;
    lytModelo: TLayout;
    lytCenter: TLayout;
    RoundRect3: TRoundRect;
    ShadowEffect9: TShadowEffect;
    Image3: TImage;
    Layout1: TLayout;
    Layout3: TLayout;
    StyleBook1: TStyleBook;
    lytRodape: TLayout;
    Rectangle2: TRectangle;
    Label9: TLabel;
    Label10: TLabel;
    Edit1: TEdit;
    Layout2: TLayout;
    ConectMarthi: TFDConnection;
    qryCadCell: TFDQuery;
    qryImagensCell: TFDQuery;
    qryImagensCellCELL_ID: TIntegerField;
    qryImagensCellSEQUENCIA: TIntegerField;
    qryImagensCellIMAGE: TBlobField;
    BindSourceDB1: TBindSourceDB;
    BindingsList1: TBindingsList;
    lytGlobal: TLayout;
    lytToten: TLayout;
    Rectangle8: TRectangle;
    Rectangle9: TRectangle;
    Rectangle10: TRectangle;
    Rectangle11: TRectangle;
    Layout8: TLayout;
    lstCelulares: TListBox;
    ListCelularItem: TListBoxItem;
    BindSourceDB2: TBindSourceDB;
    LinkFillControlToField1: TLinkFillControlToField;
    BindSourceDB3: TBindSourceDB;
    qryCadCellCELL_ID: TIntegerField;
    qryCadCellCELL_DESC: TStringField;
    qryCadCellCOR_DESC: TStringField;
    qryCadCellARMAZENAMENTO_DESC: TStringField;
    qryCadCellIMAGE: TBlobField;
    procedure FormCreate(Sender: TObject);
  private
    { Private declarations }
    function BlobToImage(Blob: TBlobField): TImage;
    procedure CarregarDados;
  public
    { Public declarations }
  end;

var
  TotemPrincipalfrm: TTotemPrincipalfrm;

implementation

uses
  Winapi.Windows;

{$R *.fmx}
{$R *.Surface.fmx MSWINDOWS}
{$R *.Moto360.fmx ANDROID}
{$R *.iPhone55in.fmx IOS}
{$R *.iPad.fmx IOS}
{$R *.Windows.fmx MSWINDOWS}

{ TTotemPrincipalfrm }

function TTotemPrincipalfrm.BlobToImage(Blob: TBlobField): TImage;
var
  MemoryStream: TMemoryStream;
  Image: TImage;
begin
  // Cria um TImage para armazenar a imagem carregada
  Image := TImage.Create(nil);
  MemoryStream := TMemoryStream.Create;
  try
    // Salva o conteúdo do Blob em um stream
    Blob.SaveToStream(MemoryStream);
    MemoryStream.Position := 0;

    // Carrega a imagem do stream
    Image.MultiResBitmap.LoadFromStream(MemoryStream);
    // Aqui você pode modificar ou ajustar o tipo da imagem (JPEG, PNG, etc.), se necessário
    Result := Image;
  finally
    MemoryStream.Free;
  end;
end;

procedure TTotemPrincipalfrm.CarregarDados;
var
  Frame: TFrameTotem;
  Image: TImage;
begin
  // Limpa os componentes existentes no VertScrollBox
  while VertScrollBox1.Content.ControlsCount > 0 do
    VertScrollBox1.Content.Controls[0].Free;

  // Percorre os dados da query
  BindSourceDB3.DataSet.First;
  while not BindSourceDB3.DataSet.Eof do
  begin
    // Cria uma instância do frame
    Frame := TFrameTotem.Create(VertScrollBox1);
    Frame.Parent := VertScrollBox1;
    Frame.Align := TAlignLayout.Top;
    //Frame.Height := 100; // Ajuste conforme necessário
    Frame.Margins.Top := 5;
    Frame.Margins.Bottom := 5;

    // Converte o BLOB para TImage
    Image := BlobToImage(BindSourceDB3.DataSet.FieldByName('IMAGE') as TBlobField);
    try
      // Preenche os dados no frame
      Frame.PreencherDados(
        BindSourceDB3.DataSet.FieldByName('CELL_DESC').AsString,
        Image // Passa o TImage
      );
    finally
      Image.Free; // Libera o TImage após o uso
    end;

    // Passa para o próximo registro
    BindSourceDB3.DataSet.Next;
  end;
end;

procedure TTotemPrincipalfrm.FormCreate(Sender: TObject);
begin
  CarregarDados;
end;

end.
